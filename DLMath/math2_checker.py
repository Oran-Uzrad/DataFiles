# -*- coding: utf-8 -*-
"""math2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i8yJvIKSa6M8G3DRd8eVJ3MCOuyBZQBu
"""



import numpy as np
class math2_checker:
  def __init__(self, name):
    self.name = name

  def __str__(self):
    return self.name

  def test_ex1(self , f):
    a = list(np.arange(20).reshape((5,4)))
    if f(a) == (5 ,4):
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')
    a = list(np.arange(20).reshape((20,1)))
    if f(a) == (20 ,1):
      print('\033[92m Test 2: Passed')
    else:
      print('\033[91m Test 2: Failed')

  def test_ex2(self , f):
    a = [list(np.arange(20))]
    if f(a) == list(np.array(a).reshape((-1,1))):
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')

  def test_ex3(self , f):
    a = np.arange(20).reshape((4,5))
    if f(a.tolist() , 1) == a[:,1].reshape((a.shape[0] , 1)).tolist():
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')

  def test_ex4(self , f):
    if f((3,4) , 0.4) == np.full((3,4) , 0.4).tolist():
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')
    
  def test_ex5(self , f):
    a = np.array(f((4,5)))
    if np.min(a) >= 0 and np.max(a) <= 1:
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')
    if a.shape == (4,5):
      print('\033[92m Test 2: Passed')
    else:
      print('\033[91m Test 2: Failed')

  def test_ex6(self , f):
    a = np.random.randint(100, size=(4, 3))
    if f(a.tolist(), '+' , 1) == (a + 1).tolist():
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')
    if f(a.tolist(), '-' , 1) == (a - 1).tolist():
      print('\033[92m Test 2: Passed')
    else:
      print('\033[91m Test 2: Failed')
    if f(a.tolist(), '*' , -3) == (a * -3).tolist():
      print('\033[92m Test 3: Passed')
    else:
      print('\033[91m Test 3: Failed')
    if f(a.tolist(), '/' , 2) == (a / 2).tolist():
      print('\033[92m Test 4: Passed')
    else:
      print('\033[91m Test 4: Failed')

  def test_ex7(self , f):
    a = np.random.randint(100, size=(400, 300))
    if a.T.tolist() == f(a.tolist()):
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')

  def test_ex8(self , f):
    a = np.random.randint(100, size=(300))
    b = np.random.randint(100, size=(300))
    if np.array(a)@np.array(b) == f(a.tolist() , b.tolist()):
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')

  def test_ex9(self , f):
    a = np.arange(15).reshape((3,5))
    b = np.arange(20).reshape((5,4))
    if (a@b).tolist() == f(a.tolist() , b.tolist()):
      print('\033[92m Test 1: Passed')
    else:
      print('\033[91m Test 1: Failed')





